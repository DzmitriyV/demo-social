{"version":3,"sources":["components/Dialogs/Dilogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/WithAuthRedirect.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","active","to","name","Message","message","maxLength50","maxLengthCreator","AddNewMessageRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","dialogsItems","values","sendMessage","newMessageBody","mapStateToProps","isAuth","auth","compose","connect","dispatch","sendMessageCreator","Component"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,wBAAwB,aAAe,6BAA6B,OAAS,uBAAuB,SAAW,yBAAyB,QAAU,0B,+FCa/JC,EAVK,SAACC,GACjB,IAAIC,EAAI,mBAAeD,EAAME,IAE7B,OACI,yBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,QAC/B,kBAAC,IAAD,CAASC,GAAIN,GAAOD,EAAMQ,QCAvBC,EANC,SAACT,GACb,OACI,yBAAKG,UAAWC,IAAEM,SAAUV,EAAMU,U,iCC2BpCC,EAAcC,YAAiB,IAgB/BC,EAAqBC,YAAU,CAACC,KAAM,2BAAjBD,EAdL,SAACd,GAEnB,OACI,0BAAMgB,SAAUhB,EAAMiB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUZ,KAAM,iBAAkBa,YAAW,qBAAwBC,SAAU,CAACC,IAAUZ,MAEhH,6BACI,6CAQDa,EA1CC,SAACxB,GAEb,IAAIyB,EAAQzB,EAAM0B,YAEdC,EAAkBF,EAAMG,QAAQC,KAAK,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYC,IAAKD,EAAE5B,GAAIM,KAAMsB,EAAEtB,KAAMN,GAAI4B,EAAE5B,QACrF8B,EAAmBP,EAAMQ,SAASJ,KAAK,SAAAK,GAAC,OAAK,kBAAC,EAAD,CAASH,IAAKG,EAAEhC,GAAIQ,QAASwB,EAAExB,aAMhF,OACI,yBAAKP,UAAWC,IAAEwB,SACd,yBAAKzB,UAAWC,IAAE+B,cACbR,GAEL,yBAAKxB,UAAWC,IAAE6B,UACd,6BAAMD,GACN,kBAACnB,EAAD,CAAoBG,SAXT,SAACoB,GACpBpC,EAAMqC,YAAYD,EAAOE,sB,gBCZ7BC,EAAkB,SAACd,GAAD,MAAY,CAC9Be,OAAQf,EAAMgB,KAAKD,S,OCgBRE,sBACXC,aAfkB,SAAClB,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAIF,SAACkB,GACtB,MAAO,CACHP,YAAa,SAACC,GACVM,EAASC,YAAmBP,UDRR,SAACQ,GAS7B,OAFqCH,YAAQJ,EAARI,EALX,SAAC3C,GACvB,OAAIA,EAAMwC,OACH,kBAACM,EAAc9C,GADG,kBAAC,IAAD,CAAUO,GAAI,gBCUhCmC,CAEOlB","file":"static/js/4.60a5e6e5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dilogs_dialogs__bK6JF\",\"dialogsItems\":\"Dilogs_dialogsItems__1L4po\",\"active\":\"Dilogs_active__1v0Kw\",\"messages\":\"Dilogs_messages__1CWTT\",\"message\":\"Dilogs_message__sj4HV\"};","import React from 'react';\r\nimport s from './../Dilogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem  = (props) => {\r\n    let path = `/dialogs/${props.id}`;\r\n\r\n    return(\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem","import React from 'react';\r\nimport s from './../Dilogs.module.css'\r\n\r\nconst Message = (props) => {\r\n    return(\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message","import React from 'react'\r\nimport s from './Dilogs.module.css'\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport Message from './Message/Message'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormControls/FormControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage\r\n\r\n    let dialogsElements = state.dialogs.map( d => <DialogItem key={d.id} name={d.name} id={d.id} /> )\r\n    let messagesElements = state.messages.map( m =>  <Message key={m.id} message={m.message} /> )\r\n\r\n    let onSendNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n\r\n    return(\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <AddNewMessageRedux onSubmit={onSendNewMessage} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddNewMessage = (props) => {\r\n\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name={'newMessageBody'} placeholder={`Enter your message`} validate={[required, maxLength50]}/>\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewMessageRedux = reduxForm({form: 'dialogAddNewMessageForm'})(AddNewMessage)\r\n\r\nexport default Dialogs","import React from 'react'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n\r\n    const RedirectComponent = (props) => {\r\n        if(!props.isAuth) return <Redirect to={'/login'}/>\r\n        return <Component {...props} />\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}","import React from 'react'\r\nimport {sendMessageCreator} from '../../redux/dialogs-reducer'\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {WithAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    WithAuthRedirect)(Dialogs)"],"sourceRoot":""}