{"version":3,"sources":["redux/dialogs-reducer.js","components/Users/Users.module.css","assets/images/user.png","assets/images/preloader.svg","components/Navbar/Navbar.module.css","api/api.js","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Navbar/Friend/Friend.jsx","components/Navbar/Navbar.jsx","components/Navbar/NavbarContainer.jsx","utils/object-helpers.js","redux/users-reducer.js","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","components/Login/LoginContainer.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","hoc/withSuspense.js","App.js","serviceWorker.js","index.js","components/common/FormControls/FormControls.jsx","components/common/Preloader/Preloader.jsx","components/common/FormControls/FormControls.module.css","components/common/Paginator/Paginator.module.css","utils/validators/validators.js","components/Header/Header.module.css","redux/profile-reducer.js"],"names":["initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","module","exports","instance","axios","baseURL","withCredentials","headers","usersApi","getUsets","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileApi","getStatus","updateStatus","status","put","authApi","me","login","email","password","rememberMe","logout","News","Music","Settings","Friend","props","Navbar","friendsElements","sidebar","friends","map","f","className","s","nav","item","to","activeClassName","activeLink","NavbarContainer","connect","updateObjectInArray","items","objectPropName","itemId","newObjProps","i","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","toggleIsFetching","toggleFollowingInProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","async","resultCode","usersReducer","followed","count","filter","Paginator","totalItemsCount","onPageChange","portionSize","pagesCount","Math","ceil","pages","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","onClick","p","pageNumber","selectedPage","key","User","src","photos","small","userPhoto","disabled","some","Users","u","getUsers","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getFollowingInProgress","getIsFetching","UsersContainer","requestUsers","this","Preloader","React","Component","mapDispatchToProps","page","totalCount","compose","Header","header","headerLogin","isAuth","SET_USER_DATA","setUserData","payload","getUserData","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","Input","required","formSummaryError","Login","formData","LoginContainer","length","stopSubmit","_error","initialized","appReducer","sidebarReducer","stateCopy","reducers","combineReducers","profilePage","profileReducer","dialogsPage","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","withSuspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","AppContainer","promise","Promise","all","withRouter","SamuraiJSApp","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","FormControls","meta","touched","children","hasError","formControl","Textarea","input","restProps","component","placeholder","validators","text","validate","style","backgroundColor","preloader","value","maxLengthCreator","maxLength","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","posts","likesCount","profile","addPostCreator","newPostText","setStatus","getUserProfile","newPost","postId"],"mappings":"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","file":"static/js/main.ab0eea88.chunk.js","sourcesContent":["const SEND_MESSAGE = 'SEND_MESSAGE'\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {\r\n            id: 1,\r\n            name: 'Dimych'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Andrey'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Sveta'\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'Sasha'\r\n        },\r\n        {\r\n            id: 5,\r\n            name: 'Victor'\r\n        },\r\n        {\r\n            id: 6,\r\n            name: 'Valera'\r\n        },\r\n    ],\r\n    messages: [\r\n        {\r\n            id: 1,\r\n            message: 'Hi'\r\n        },\r\n        {\r\n            id: 2,\r\n            message: 'How is you it-kamasutra?'\r\n        },\r\n        {\r\n            id: 3,\r\n            message: 'Yo'\r\n        },\r\n        {\r\n            id: 4,\r\n            message: 'Yo'\r\n        },\r\n        {\r\n            id: 5,\r\n            message: 'Yo'\r\n        },\r\n    ]\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}],\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\r\n\r\nexport default dialogsReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__3hq2e\"};","module.exports = __webpack_public_path__ + \"static/media/user.6db09181.png\";","module.exports = __webpack_public_path__ + \"static/media/preloader.859f1396.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2nfLh\",\"item\":\"Navbar_item__3ryH1\",\"activeLink\":\"Navbar_activeLink__2R5iA\"};","import * as axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': 'fc0455f8-b26a-4efe-8416-b2b2c8a38122'\r\n    }\r\n})\r\n\r\nexport const usersApi = {\r\n    getUsets(currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n            .then(response => response.data)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n            .then(response => response.data)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete methos. Pelase use profileApi object.')\r\n        return profileApi.getProfile(userId)\r\n    }\r\n}\r\n\r\nexport const profileApi = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`)\r\n            .then(response => response.data)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n            .then(response => response.data)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status})\r\n            .then(response => response.data)\r\n    }\r\n}\r\n\r\nexport const authApi = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n            .then(response => response.data)\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`,  {email, password, rememberMe})\r\n            .then(response => response.data)\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n            .then(response => response.data)\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nconst News = () => {\r\n    return(\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News","import React from 'react';\r\n\r\nconst Music = () => {\r\n    return(\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music","import React from 'react';\r\n\r\nconst Settings = () => {\r\n    return(\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings","import React from 'react';\r\nimport s from './Friend.module.css';\r\n\r\nconst Friend = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            {props.name}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Friend","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Friend from \"./Friend/Friend\";\r\n\r\nconst Navbar = (props) => {\r\n\r\n    let friendsElements = props.sidebar.friends.map( f => <Friend name={f.name} />)\r\n\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to='/profile' activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/dialogs' activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/users' activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/news' activeClassName={s.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/music' activeClassName={s.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/settings' activeClassName={s.activeLink}>Settings</NavLink>\r\n            </div>\r\n            <div>\r\n                <div>Friends</div>\r\n                <div>\r\n                    {friendsElements}\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar","import React from 'react';\r\nimport Navbar from \"./Navbar\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        sidebar: state.sidebar\r\n    }\r\n}\r\n\r\nconst NavbarContainer = connect(mapStateToProps)(Navbar)\r\n\r\nexport default NavbarContainer","export const updateObjectInArray = (items, objectPropName, itemId, newObjProps) => {\r\n    return items.map(i => {\r\n        if(i[objectPropName] === itemId) {\r\n            return {...i, ...newObjProps}\r\n        }\r\n        return i\r\n    })\r\n}","import {usersApi} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'kamasutra-network/users/FOLLOW'\r\nconst UNFOLLOW = 'kamasutra-network/users/UNFOLLOW'\r\nconst SET_USERS = 'kamasutra-network/users/SET_USERS'\r\nconst SET_CURRENT_PAGE = 'kamasutra-network/users/SET_CURRENT_PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'kamasutra-network/users/SET_TOTAL_USERS_COUNT'\r\nconst TOGGLE_IS_FETCHING = 'kamasutra-network/users/TOGGLE_IS_FETCHING'\r\nconst TOGGLE_FOLLOWING_IN_PROGRESS = 'kamasutra-network/users/TOGGLE_FOLLOWING_IN_PROGRESS'\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                // users: state.users.map(u => {\r\n                //     if(u.id === action.userId) {\r\n                //         return {...u, followed: true}\r\n                //     }\r\n                //     return u\r\n                // })\r\n                users: updateObjectInArray(state.users, 'id', action.userId, {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                // users: state.users.map(u => {\r\n                //     if(u.id === action.userId) {\r\n                //         return {...u, followed: false}\r\n                //     }\r\n                //     return u\r\n                // })\r\n                users: updateObjectInArray(state.users, 'id', action.userId, {followed: false})\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.count\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case TOGGLE_FOLLOWING_IN_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter( id => id !== action.userId)\r\n\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) =>  ({type: FOLLOW, userId})\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingInProgress = (isFetching, userId) => ({type: TOGGLE_FOLLOWING_IN_PROGRESS, isFetching , userId})\r\n\r\nexport const requestUsers = (page, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true))\r\n    dispatch(setCurrentPage(page))\r\n\r\n    let data = await usersApi.getUsets(page, pageSize)\r\n\r\n    dispatch(toggleIsFetching(false))\r\n    dispatch(setUsers(data.items))\r\n    dispatch(setTotalUsersCount(data.totalCount))\r\n}\r\n\r\nconst followUnfollowFlow = async (userId, dispatch, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingInProgress(true, userId))\r\n\r\n\r\n    let data = await apiMethod\r\n\r\n    if(data.resultCode === 0) {\r\n        dispatch(actionCreator)\r\n        dispatch(toggleFollowingInProgress(false, userId))\r\n    }\r\n}\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n\r\n    followUnfollowFlow(userId, dispatch, usersApi.follow(userId), followSuccess(userId))\r\n\r\n}\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n\r\n    followUnfollowFlow(userId, dispatch, usersApi.unfollow(userId),  unfollowSuccess(userId))\r\n\r\n}\r\n\r\nexport default usersReducer","import React, {useState} from 'react'\r\nimport styles from './Paginator.module.css'\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChange, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n\r\n    let pages = []\r\n\r\n    for(let i = 1; i <= pagesCount; i++ ) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionPageNumber = (portionNumber - 1)*pageSize + 1\r\n    let rightPortionPageNumber = portionNumber*pageSize\r\n\r\n    return (\r\n            <div className={styles.paginator}>\r\n                {portionNumber > 1 && <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button>}\r\n                {pages\r\n                    .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                    .map(p => {\r\n                        return <span className={`${styles.pageNumber}${currentPage === p ? ' ' + styles.selectedPage : ''}`}\r\n                                     key={p}\r\n                                     onClick={() => { onPageChange(p) }}>{p}</span>\r\n                })}\r\n                {portionCount > portionNumber && <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button>}\r\n            </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Paginator","import React from 'react'\r\nimport styles from './Users.module.css'\r\nimport userPhoto from '../../assets/images/user.png'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet User = ({users, followingInProgress, unfollow, follow}) => {\r\n    return (\r\n        <div key={users.id}>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={`profile/${users.id}`}>\r\n                    <img src={users.photos.small != null ? users.photos.small : userPhoto}\r\n                         className={styles.userPhoto}/>\r\n                     </NavLink>\r\n                </div>\r\n                <div>\r\n                    {users.followed\r\n                        ? <button disabled={followingInProgress.some( id => id === users.id)} onClick={() => {\r\n                            unfollow(users.id)\r\n                        }}>Unfollow</button>\r\n                        : <button disabled={followingInProgress.some( id => id === users.id)} onClick={() => {\r\n                            follow(users.id)\r\n                        }}>Follow</button>}\r\n                </div>\r\n            </span>\r\n            <span>\r\n                <span>\r\n                    <div>{users.name}</div>\r\n                    <div>{users.status}</div>\r\n                </span>\r\n                <span>\r\n                    <div>{/*users.location.country*/}</div>\r\n                    <div>{/*users.location.city*/}</div>\r\n                </span>\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default User","import React from 'react'\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nlet Users = ({totalUsersCount, pageSize, currentPage, onPageChange, users, ...props}) => {\r\n\r\n    return (\r\n        <div>\r\n            <Paginator totalItemsCount={totalUsersCount} pageSize={pageSize} currentPage={currentPage} onPageChange={onPageChange} />\r\n            {users.map(u => <User key={u.id}\r\n                                  users={u}\r\n                                  followingInProgress = {props.followingInProgress}\r\n                                  unfollow = {props.unfollow}\r\n                                  follow = {props.follow} />)}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Users","import {createSelector} from \"reselect\";\r\n\r\nexport const getUsers = (state) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\n// export const getUsersTest = createSelector(getUsers,\r\n//     (users) => {\r\n//     return users.filter(u => true)\r\n// })","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {\r\n    follow,\r\n    requestUsers,\r\n    unfollow\r\n} from '../../redux/users-reducer'\r\nimport Users from './Users'\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers,\r\n    getIsFetching\r\n} from \"../../redux/users-selectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props\r\n        this.props.requestUsers(currentPage, pageSize)\r\n    }\r\n\r\n    onPageChange = (pageNumber) => {\r\n        const {pageSize} = this.props\r\n        this.props.requestUsers(pageNumber, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users users={this.props.users}\r\n                   totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   unfollow={this.props.unfollow}\r\n                   follow={this.props.follow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n                   onPageChange={this.onPageChange}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n// let mapStateToProps = (state) => {\r\n//     return {\r\n//         users: state.usersPage.users,\r\n//         pageSize: state.usersPage.pageSize,\r\n//         totalUsersCount: state.usersPage.totalUsersCount,\r\n//         currentPage: state.usersPage.currentPage,\r\n//         followingInProgress: state.usersPage.followingInProgress\r\n//     }\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = {\r\n    follow,\r\n    unfollow,\r\n    requestUsers,\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(UsersContainer)","import React from 'react'\r\nimport s from './Header.module.css'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src=\"http://html.dev-bitrix.by/manao/img/logo.png\" />\r\n            <div  className={s.headerLogin}>\r\n                {props.isAuth ? <div>{props.login} - <button onClick={props.logout}>Logout</button></div>\r\n                    : <NavLink to='/login'>Login</NavLink>}\r\n\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import {authApi} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'kamasutra-network/auth/SET_USER_DATA'\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setUserData = (userId, login, email, isAuth) =>  ({type: SET_USER_DATA, payload: {userId, login, email, isAuth}})\r\n\r\nexport const getUserData = () => async (dispatch) => {\r\n    let data = await authApi.me()\r\n\r\n    if(data.resultCode === 0) {\r\n        let {id, login, email} = data.data\r\n        dispatch(setUserData(id, login, email, true))\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let data = await authApi.login(email, password, rememberMe)\r\n\r\n    if(data.resultCode === 0) {\r\n        dispatch(getUserData())\r\n    } else {\r\n        let message= data.messages.length > 0 ? data.messages[0] : 'Some error'\r\n        dispatch(stopSubmit('login', {_error: message}))\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let data = await authApi.logout()\r\n\r\n    if(data.resultCode === 0) {\r\n        dispatch(setUserData(null, null, null, false))\r\n    }\r\n}\r\n\r\nexport default authReducer","import React from 'react'\r\nimport Header from './Header'\r\nimport {connect} from 'react-redux'\r\nimport {logout} from '../../redux/auth-reducer'\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props} />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToprops = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\nexport default connect(mapStateToprops, {logout})(HeaderContainer)","import React from 'react'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {createField, Input} from \"../common/FormControls/FormControls\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport styles from '../common/FormControls/FormControls.module.css'\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {/*<div>*/}\r\n            {/*    <Field name={'email'} component={Input} placeholder={'Email'} validate={[required]}/>*/}\r\n            {/*</div>*/}\r\n            {/*<div>*/}\r\n            {/*    <Field name={'password'} component={Input} placeholder={'Password'} type={'password'} validate={[required]}/>*/}\r\n            {/*</div>*/}\r\n            {/*<div>*/}\r\n            {/*    <Field name={'rememberMe'} component={Input} type={'checkbox'} /> remember me*/}\r\n            {/*</div>*/}\r\n            {createField('email', Input, 'Email', [required])}\r\n            {createField('password', Input, 'Password', [required], {type: 'password'})}\r\n            {createField('rememberMe', Input, null, [], {type: 'checkbox'}, 'remember me')}\r\n            {error && <div className={styles.formSummaryError}>{error}</div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n\r\n    let onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if(props.isAuth) {\r\n        return <Redirect to={'/profile'} />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","import React from 'react'\r\nimport Login from './Login'\r\nimport {connect} from 'react-redux'\r\nimport {login} from '../../redux/auth-reducer'\r\n\r\n\r\nclass LoginContainer extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Login {...this.props} />\r\n        )\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {login})(LoginContainer)","import {getUserData} from \"./auth-reducer\";\r\n\r\n    const INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS'\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () =>  ({type: INITIALIZED_SUCCESS})\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n        let promise = dispatch(getUserData())\r\n        Promise.all([promise])\r\n            .then(() => {\r\n                    dispatch(initializedSuccess())\r\n            })\r\n}\r\n\r\nexport default appReducer","let initialState = {\r\n    friends: [\r\n        {name: 'Andrew'},\r\n        {name: 'Sasha'},\r\n        {name: 'Sveta'},\r\n    ]\r\n}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    let stateCopy = {...state}\r\n    return stateCopy\r\n}\r\n\r\nexport default sidebarReducer","import {applyMiddleware, combineReducers, compose, createStore} from 'redux'\r\nimport profileReducer from './profile-reducer'\r\nimport dialogsReducer from './dialogs-reducer'\r\nimport sidebarReducer from './sidebar-reducer'\r\nimport usersReducer from './users-reducer'\r\nimport authReducer from './auth-reducer'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from './app-reducer'\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n})\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\nwindow.__store__ = store\r\n\r\nexport default store","import React, {Suspense} from 'react'\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\nexport const withSuspense = (Component) => {\r\n\r\n    return (props) => {\r\n        return (\r\n            <Suspense fallback={<Preloader/>}>\r\n                <Component {...props} />\r\n            </Suspense>\r\n        )\r\n    }\r\n}","import React, {Suspense} from 'react'\nimport './App.css'\nimport {BrowserRouter, HashRouter, Route, withRouter} from 'react-router-dom'\nimport News from './components/News/News'\nimport Music from './components/Music/Music'\nimport Settings from './components/Settings/Settings'\nimport NavbarContainer from './components/Navbar/NavbarContainer'\nimport UsersContainer from './components/Users/UsersContainer'\nimport HeaderContainer from './components/Header/HeaderContainer'\nimport LoginContainer from './components/Login/LoginContainer'\nimport {connect, Provider} from 'react-redux'\nimport {compose} from 'redux'\nimport {initializeApp} from './redux/app-reducer'\nimport Preloader from './components/common/Preloader/Preloader'\nimport store from \"./redux/redux-store\";\nimport {withSuspense} from \"./hoc/withSuspense\";\n// import DialogsContainer from './components/Dialogs/DialogsContainer'\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'))\n// import ProfileContainer from './components/Profile/ProfileContainer'\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'))\n\nclass App extends React.Component {\n\n    componentDidMount() {\n        this.props.initializeApp()\n    }\n\n    render() {\n        if(!this.props.initialized) {\n            return <Preloader />\n        }\n\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <NavbarContainer/>\n                <div className='app-wrapper-content'>\n                    <Route path='/profile/:userId?'\n                           render={withSuspense(ProfileContainer)}/>\n                    <Route path='/dialogs'\n                           render={withSuspense(DialogsContainer)}/>\n                    <Route path='/news'\n                           render={() => <News/>}/>\n                    <Route path='/music'\n                           render={() => <Music/>}/>\n                    <Route path='/settings'\n                           render={() => <Settings/>}/>\n                    <Route path='/users'\n                           render={() => <UsersContainer/>}/>\n                    <Route path='/login'\n                           render={() => <LoginContainer/>}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nconst AppContainer = compose(\n    connect(mapStateToProps, {initializeApp}),\n    withRouter)(App)\n\nconst SamuraiJSApp = (props) => {\n    return(\n        <HashRouter>\n            <Provider store={store}>\n                <AppContainer />\n            </Provider>\n        </HashRouter>\n        // <BrowserRouter basename={process.env.PUBLIC_URL}>\n        //     <Provider store={store}>\n        //         <AppContainer />\n        //     </Provider>\n        // </BrowserRouter>\n    )\n}\n\nexport default SamuraiJSApp\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport SamuraiJSApp from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<SamuraiJSApp />, document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react'\r\nimport styles from './FormControls.module.css'\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControls = ({meta: {touched, error}, children}) => {\r\n\r\n    const hasError = touched && error\r\n\r\n    return(\r\n        <div className={`${styles.formControl}${hasError ? ' ' + styles.error : ''}`}>\r\n            <div>{children}</div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, ...restProps} = props\r\n    return(\r\n        <FormControls {...props} >\r\n            <textarea {...input} {...restProps} />\r\n        </FormControls>\r\n    )\r\n}\r\nexport const Input = (props) => {\r\n    const {input, meta, ...restProps} = props\r\n    return(\r\n        <FormControls {...props} >\r\n            <input {...input} {...restProps} />\r\n        </FormControls>\r\n    )\r\n}\r\n\r\nexport const createField = (name, component, placeholder = '', validators,  props= {}, text= '') => (\r\n    <div>\r\n        <Field\r\n            name={name}\r\n            component={component}\r\n            placeholder={placeholder}\r\n            validate={validators}\r\n            {...props} />{text}\r\n    </div>\r\n)","import React from 'react';\r\nimport preloader from \"../../../assets/images/preloader.svg\";\r\n\r\nlet Preloader = (props) => {\r\n    return <div style={ {backgroundColor: 'white'} }><img src={preloader} /></div>\r\n}\r\n\r\nexport default Preloader","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl___dD1N\",\"error\":\"FormControls_error__Cy7SK\",\"formSummaryError\":\"FormControls_formSummaryError__2Zlgs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator___b3-z\",\"pageNumber\":\"Paginator_pageNumber__3Wkl3\",\"selectedPage\":\"Paginator_selectedPage__x113Z\"};","export const required = value => {\r\n    if(value) return undefined\r\n    return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = maxLength => value => {\r\n    if(value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2eV_K\",\"headerLogin\":\"Header_headerLogin__1u0ZG\"};","import {profileApi, usersApi} from \"../api/api\";\r\n\r\nconst ADD_POST = 'kamasutra-network/profile/ADD-POST'\r\nconst SET_USER_PROFILE = 'kamasutra-network/profile/SET_USER_PROFILE'\r\nconst SET_STATUS = 'kamasutra-network/profile/SET_STATUS'\r\nconst DELETE_POST = 'kamasutra-network/profile/DELETE_POST'\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {\r\n            id: 1,\r\n            message: `Hi, how are you?`,\r\n            likesCount: 12\r\n        },\r\n        {\r\n            id: 2,\r\n            message: `It's my first post`,\r\n            likesCount: 11\r\n        },\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id != action.postId)\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addPostCreator = (newPostText) =>  ({type: ADD_POST, newPostText})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let data = await usersApi.getProfile(userId)\r\n\r\n    dispatch(setUserProfile(data))\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let data = await profileApi.getStatus(userId)\r\n\r\n    dispatch(setStatus(data))\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let data = await profileApi.updateStatus(status)\r\n\r\n    if(data.resultCode === 0) {\r\n        dispatch(setStatus(status))\r\n    }\r\n}\r\n\r\nexport default profileReducer"],"sourceRoot":""}